{{define "ROOT"}}
package {{downcase .Name}}

type Middleware struct{
    {{range $middleware, $_ := .Middleware}}
        {{name $middleware}} serve.Middleware
    {{end}}
}

type Services struct {
    {{range $service, $_ := .Services}}
        services.{{name $service}}
    {{end}}
}

type {{name .Name}} struct {
    router   serve.Router
    *Middleware
    *Services
}

func New(m *Middleware, s *Services) *{{name .Name}} {
  router :=  router(m, s)

  return &{{name .Name}}{
    router:   router,
    Middleware: m,
    Services: s,
  }
}

func ({{downcase .Name}} *{{name .Name}}) ServeHTTP(w http.ResponseWriter, r *http.Request) {
    context.ClearHandler(http.HandlerFunc({{downcase .Name}}.router.ServeHTTP)).ServeHTTP(w, r)
}

{{end}}
